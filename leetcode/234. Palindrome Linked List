# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        if head == None:
            return True
        end = False
        fast = head
        slow = head
        stack = []
        while(not end):
            stack.append(slow)
            if (fast.next != None):
                if (fast.next.next != None):
                    fast = fast.next.next
                    slow = slow.next
                else:
                    fast = fast.next
                    slow = slow.next
                    end = True
            else:
                end = True
        while(len(stack)>0):
            fr = stack.pop(-1).val
            bk = slow.val
            if (fr != bk):
                return False
            slow = slow.next
        return True
