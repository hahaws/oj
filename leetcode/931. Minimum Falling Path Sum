class Solution:
    def minFallingPathSum(self, A):
        """
        :type A: List[List[int]]
        :rtype: int
        """
        dp = A
        l = len(A)
        if len(A) == 1:
            return min(A[0])
        for r in range(1,l):
            for c in range(l):
                if (c==0):
                    dp[r][c] = A[r][c] + min(dp[r-1][c],dp[r-1][c+1])
                    minsum = dp[r][c]
                elif (c == (l-1)):
                    dp[r][c] = A[r][c] + min(dp[r-1][c],dp[r-1][c-1])
                else:
                    dp[r][c] = A[r][c] + min(dp[r-1][c],dp[r-1][c+1],dp[r-1][c-1])
                if (r==(l-1)):
                    minsum = min(minsum,dp[r][c])
        return minsum
