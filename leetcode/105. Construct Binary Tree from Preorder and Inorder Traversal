# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        
#         if (len(preorder) == 0) or (len(inorder) == 0):
#             return None
#         root = TreeNode(preorder[0])
#         i = inorder.index(root.val)
#         left = inorder[:i]
#         right = inorder[i+1:]
#         root.left = self.buildTree(preorder[1:1+len(left)], left)
#         root.right = self.buildTree(preorder[-len(right):], right)
        
         # return root
        
        if inorder:
            ind = inorder.index(preorder.pop(0))
            root = TreeNode(inorder[ind])
            root.left = self.buildTree(preorder, inorder[:ind])
            root.right = self.buildTree(preorder, inorder[ind+1:])
            return root
            
