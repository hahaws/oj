# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
# Recursion function         
        # if root is None:
        #     return []
        # left = self.inorderTraversal(root.left) 
        # mid = [root.val]
        # right = self.inorderTraversal(root.right)
        # return left + mid + right
        
        if root is None:
            return []
        stack = []
        res = []
        def push(root):
            if root is None:
                return 
            stack.append(root)
            push(root.left)
            
        push(root)
        while(len(stack)>0):
            node = stack.pop()
            res.append(node.val)
            if node.right is not None:
                push(node.right)
        return res
                
