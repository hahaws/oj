class Solution:
    def maximalSquare(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        if not matrix or len(matrix) == 0:
            return 0
        dp = [[0 for x in range(len(matrix[0]))] for y in range(len(matrix))] 
        m = 0
        if matrix[0][0] == "1":
            dp[0][0] = 1
        else:
            dp[0][0] = 0
        for i in range(len(matrix)):
            if (matrix[i][0] == "0"):
                dp[i][0] = 0
            else:
                dp[i][0] = 1
            m = max(m,dp[i][0])
        for j in range(len(matrix[0])):
            if(matrix[0][j] == "0"):
                dp[0][j] = 0
            else:
                dp[0][j] = 1
            m = max(m,dp[0][j])
        for i in range(1,len(matrix)):
            for j in range (1,len(matrix[0])):
                if matrix[i][j] == "1":
                    dp[i][j] = min(dp[i][j-1],dp[i-1][j],dp[i-1][j-1]) + 1
                else: 
                    dp[i][j] = 0
                m = max(m,dp[i][j])
        return m*m
