# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # if (head == None) or (head.next == None):
        #     return head
        # else:
        #     newhead = self.reverseList(head.next)
        #     head.next.next = head
        #     head.next = None
        #     return newhead
        if (head == None) or (head.next == None):
            return head
        prev = head
        curl = head.next
        temp = head.next.next
        while(curl != None):
            temp = curl.next
            curl.next = prev
            prev = curl
            curl = temp
        head.next = None
        return prev
