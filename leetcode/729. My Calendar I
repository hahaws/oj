class Node:
    __slots__ = 'start', 'end', 'left','right'
    
    def __init__(self,start,end):
        self.start = start
        self.end = end
        self.left = self.right = None
        
    def insert(self, node):
        if node.end<=self.start:
            if self.left == None:
                self.left = node
                return True
            return self.left.insert(node)
        elif node.start >= self.end:
            if self.right == None:
                self.right = node
                return True
            return self.right.insert(node)
        else:
            return False

class MyCalendar:

    
#     Brute Force:
#       TIME: O(N^2)
#       SPACE: O(N)

#     def __init__(self):
#         self.calendar =  []

#     def book(self, start, end):
#         """
#         :type start: int
#         :type end: int
#         :rtype: bool
#         """
#         for s,e in self.calendar:
#             if s<end and e>start:
#                 return False
#         self.calendar.append((start,end))
#         return True


    def __init__(self):
        self.root = None

    def book(self, start, end):
        """
        :type start: int
        :type end: int
        :rtype: bool
        """
        if self.root == None:
            self.root = Node(start,end)
            return True
        return self.root.insert(Node(start,end))

# Your MyCalendar object will be instantiated and called as such:
# obj = MyCalendar()
# param_1 = obj.book(start,end)
